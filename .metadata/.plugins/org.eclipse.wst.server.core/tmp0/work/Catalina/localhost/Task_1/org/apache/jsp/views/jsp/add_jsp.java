/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-01-06 10:29:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.ces.model.BookModel;

public final class add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

 String type = "null"; 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.ces.model.BookModel");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<link href=\"views/css/add.css\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body style=\"text-align: center\">\n");
      out.write('\n');
 	BookModel bookModel = (BookModel)request.getAttribute("book");
	if(bookModel != null) type = "edit";

      out.write("\n");
      out.write("\t<form style=\"display: inline-block;\" action=\"");
      out.print( request.getContextPath() );
      out.write("/Book\" method=\"POST\">\n");
      out.write("\t\n");
      out.write("\t\t<h2>Create book</h2>\n");
      out.write("\t\t<div class=\"add\" style=\"display: flex\">\n");
      out.write("\t\t\t<div class=\"add__lable\">\n");
      out.write("\t\t\t\t<p style=\"margin-top: .5rem\">Name:</p> </br></br>\n");
      out.write("\t\t\t\t<p style=\"margin-top: -.5rem\">Author:</p> \n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"add__input\">\n");
      out.write("\t\t\t\t<input\n");
      out.write("\t\t\t\t\tstyle=\"padding: .5rem; width: 20rem\"\n");
      out.write("\t\t\t\t\ttype=\"text\"\n");
      out.write("\t\t\t\t\tplaceholder=\"Enter book's name\"\n");
      out.write("\t\t\t\t\tname=\"name\"\n");
      out.write("\t\t\t\t\tvalue=\"");
 if(bookModel != null) { 
      out.write(' ');
      out.print( bookModel.getName() );
      out.write(' ');
 } 
      out.write("\"\n");
      out.write("\t\t\t\t/></br></br>\n");
      out.write("\t\t\t\t");

					String error = (String)request.getAttribute("error");
					if(error != null) { 
      out.write("\n");
      out.write("\t\t\t\t\t<p style=\"margin-top: -1rem; color: red; display: flex; justify-content: flex-end; font-size: .7rem\">\n");
      out.write("\t\t\t\t\t\t");
      out.print( error );
      out.write("\n");
      out.write("\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t");
	} 
      out.write("\n");
      out.write("\t\t\t\t<input\n");
      out.write("\t\t\t\tstyle=\"padding: .5rem; width: 20rem\"\n");
      out.write("\t\t\t\t\ttype=\"text\"\n");
      out.write("\t\t\t\t\tplaceholder=\"Enter book's author\"\n");
      out.write("\t\t\t\t\tname=\"author\"\n");
      out.write("\t\t\t\t\tvalue=\"");
 if(bookModel != null) { 
      out.write(' ');
      out.print( bookModel.getAuthor() );
      out.write(' ');
 } 
      out.write("\"\n");
      out.write("\t\t\t\t/>\n");
      out.write("\t\t\t\t<input\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tname=type\n");
      out.write("\t\t\t\t\ttype=\"hidden\"\n");
      out.write("\t\t\t\t\tvalue=\"");
      out.print( type );
      out.write("\"\n");
      out.write("\t\t\t\t/>\n");
      out.write("\t\t\t\t");

					if(bookModel != null) { 
      out.write("\n");
      out.write("\t\t\t\t\t<input name=\"id\" type=\"hidden\" value=\"");
      out.print( bookModel.getId() );
      out.write("\"/>\n");
      out.write("\t\t\t\t");
 } 
      out.write("\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"add__actions\" style=\"display: flex; justify-content: flex-end;\">\n");
      out.write("\t\t\t");
 if(request.getParameter("type") != null && request.getParameter("type").equals("edit")) { 
      out.write("\n");
      out.write("\t\t\t\t<button type=\"submit\" style=\"margin-right: .5rem; padding: .5rem\">\n");
      out.write("\t\t\t\t\tUpdate\n");
      out.write("\t\t\t\t</button>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t");
 } else { 
      out.write("\n");
      out.write("\t\t\t\t<button type=\"submit\" style=\"padding: .5rem\">\n");
      out.write("\t\t\t\t\tSubmit\n");
      out.write("\t\t\t\t</button>\n");
      out.write("\t\t\t");
 } 
      out.write("\n");
      out.write("\t\t\t<button>\n");
      out.write("\t\t\t\t<a href=\"");
      out.print( request.getContextPath() );
      out.write("/Book\">Cancel</a>\n");
      out.write("\t\t\t</button>\n");
      out.write("\t\t</div>\n");
      out.write("\t</form>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
